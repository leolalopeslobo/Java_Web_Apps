What we will build?

We will build two projects:
1. Springboot - backend (Server): Exposes REST APIs
2. React-hooks-frontend (Client): Consumes REST APIs

------------------------------

Pre-requisites
1. HTML, CSS and JavaScript Basics
2. React Basics
3. Spring Boot Basics
4. Node and NPM installed

------------------------------

Tools and Technologies used
Server side
1. IntelliJ IDEA
2. Java 8+
3. Spring Boot 2.6+
4. Spring Data JPA (Hibernate)
5. MySQL database
6. Maven
7. Postman Client


Client side
1. React JS
2. React Hooks
3. Visual Studio Code IDE
4. Bootstrap 5
- Axios HTTP Library


React is a JS library for build-in UI
React Hooks allows use state in a function components and other react features


Spring Boot is a Java framework for built-in REST APIs and Microservices


We need to use a third-part library to make an AJAX call or REST API since React is not capable of doing so



-----------------------
-----------------------
To create a Spring Boot application we can use - Spring Initializr
https://start.spring.io/


Spring Web
Spring Data JPA - to talk to the database
MySQL Driver -  to connect to the database
Lombok - to reduce boilerplate code



----------------------
----------------------
Packaging Structure for the spring boot application

in 'model' package we keep the jpa entities
in 'controller' package we keep the spring mvc controllers
in 'repository' package we keep the spring data jpa repositories
in 'exception' package we keep the all the exceptions

----------------------
----------------------
Next we are going to configure MySQL database in Spring application
go to 'resources' folder -> application.properties

Here we keep all the application level configurations are kept in 'application.properties'

1. Create a database in MySQL server
cmd -> mysql


To connect to the created MySQL database use the following code in the 'application.properties' file
spring.datasource.url=jdbc:mysql://localhost:3306/ems?useSSL=false
spring.datasource.username.username=root
spring.datasource.password=cdac@123

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect

spring.jpa.hibernate.ddl-auto=update


for development
use 'update'

for deployment and production use
use 'create' or 'validate'



2. Creating JPA Entity, JPA Repository and Exception


3.Building Get all Employee REST API